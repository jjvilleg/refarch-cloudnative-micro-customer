# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
replicaCount: 1
revisionHistoryLimit: 1
image:
  #repository: registry.csplab.cloudns.cx/microprofile/customer-mp
  #repository: customer-mp
  repository: customer
  tag: latest
  pullPolicy: IfNotPresent
  resources:
    requests:
      memory: 64Mi

service:
  name: customer
  dbService: customer-svc-couchdb
  type: NodePort
  servicePort: 9080
  servicePortHttps: 9443
  auth: auth
  zipkinHost: zipkin
  zipkinPort: 9411
  minikubeIp:
  authKubePort:

volumes:
  mountPath: /opt/ibm/wlp/usr/shared

services:
base:
  enabled: false
  replicaCount: 1
  image:
    tag : v0.9.9
  weight: 100

jwt:
  id: myMpJwt

couchdb:
  clusterSize: 1
  fullnameOverride: customer
  host: customer-svc-couchdb
  adminUsername: admin
  adminPassword: passw0rd
  database: customers
  port: 5984
  service:
    externalPort: 5984
    type: NodePort
    annotations:
      sidecar.istio.io/inject: "false"

## Persist data to a persistent volume
persistence:
  enabled: false
  ## database data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  #storageClass: "-"
  accessMode: ReadWriteOnce

labels:
  app: customer
  version: v1
  tier: backend
  implementation: microprofile

global:
  istio:
    enabled: false
    gateway: 
    name: customer-gateway

istio:
  enabled: false
  # ISTIO_MUTUAL, SIMPLE, DISABLE
  # mTLS: ISTIO_MUTUAL
  mTLS: SIMPLE
  # LEAST_CONN, ROUND_ROBIN
  loadBalancer: LEAST_CONN
  gateway:
    enabled: false
    name: customer-gateway
    hosts:
      - "customer.bluecompute.com"
    TLS:
      enabled: false
      # SIMPLE, MUTUAL
      mode: SIMPLE
      httpsRedirect: true
      serverCertificate: /etc/istio/ingressgateway-certs/tls.crt
      privateKey: /etc/istio/ingressgateway-certs/tls.key
      caCertificates: /etc/istio/ingressgateway-ca-certs/ca-chain.cert.pem

ingress:
  path: /customer/rest

travis: false