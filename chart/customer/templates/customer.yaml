apiVersion: v1
kind: Service
metadata:
  name: "{{ .Release.Name }}-{{ .Values.service.name }}"
  labels:
    {{- include "customer.labels" . | indent 4 }}
spec:
  type: {{ .Values.service.type }}
  ports:
  - name: http
    port: {{ .Values.service.servicePort }}
  - name: https
    port: {{ .Values.service.servicePortHttps }}
  selector:
    {{- include "customer.labels" . | indent 4 }}

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}-{{ .Values.service.name }}"
  labels:
    {{- include "customer.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector: 
    matchLabels: {{- include "customer.labels" . | indent 6 }}
  template:
    metadata:
      labels:
        {{- include "customer.labels" . | indent 8 }}
    spec:
      containers:
      # Liberty Server Container
      - name: "{{ .Chart.Name }}"
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        # image: customer
        imagePullPolicy: IfNotPresent
        readinessProbe:
          httpGet:
            path: /health
            port: 9443
            scheme: HTTPS
          initialDelaySeconds: 60
          periodSeconds: 20
          failureThreshold: 6
        livenessProbe:
          httpGet:
            path: /
            port: 9443
            scheme: HTTPS
          initialDelaySeconds: 60
          periodSeconds: 10
          failureThreshold: 6
        env:
          {{ if .Values.travis }} 
          - name: jwksUri
            value: "https://{{ .Values.service.minikubeIp }}:{{ .Values.service.authKubePort }}/oidc/endpoint/OP/jwk"
          - name: jwksIssuer
            value: "https://{{ .Values.service.minikubeIp }}:9443/oidc/endpoint/OP"
          - name: administratorRealm
            value: "user:https://{{ .Values.service.minikubeIp }}:9443/oidc/endpoint/OP/user"
          - name: auth_health
            value: "https://{{ .Values.service.minikubeIp }}:{{ .Values.service.authKubePort }}/health"
        {{ else }}
          - name: jwksUri
            value: "https://auth-{{ .Values.service.auth }}:9443/oidc/endpoint/OP/jwk"
          - name: jwksIssuer
            value: "https://auth-{{ .Values.service.auth }}:9443/oidc/endpoint/OP"
          - name: administratorRealm
            value: "user:https://auth-{{ .Values.service.auth }}:9443/oidc/endpoint/OP/user"
          - name: auth_health
            value: "https://auth-{{ .Values.service.auth }}:9443/health"
        {{ end }}
          - name: COUCHDB_HOST
            value: "{{ .Release.Name }}-{{ .Values.couchdb.hostSuffix }}"
          - name: COUCHDB_PORT
            value: "{{ .Values.couchdb.port }}"
          - name: PORT
            value: "{{ .Values.service.servicePort }}"
          - name: RELEASE_NAME
            value: "{{ .Release.Name }}"
          - name: jwtid
            value: "{{ .Values.jwt.id }}"
          - name: zipkinHost
            value: "{{ .Release.Name }}-{{ .Values.service.zipkinHost }}"
          - name: zipkinPort
            value: "{{ .Values.service.zipkinPort }}"
        resources:
          requests:
            memory: "{{ .Values.image.resources.requests.memory }}"
        volumeMounts:
        - name: keystorevol
          mountPath: "/etc/keystorevol"
          readOnly: true
      volumes:
      - name: keystorevol
        secret:
          secretName: keystoresecret
